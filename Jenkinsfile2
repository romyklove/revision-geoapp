pipeline{
    agent any
    tools{
        maven 'M2_HOME'
    }
    stages{
        stage ('sonarqube scan'){
        
           agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
              steps{
                withSonarQubeEnv('sonarQube'){

                  sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=romyklove_revision-geoapp'
            }
        }
        }
        stage('maven commands2'){
            steps{
                sh 'mvn clean compile install package'
            }
        }
        stage('upload artifact'){
            steps{
                sh 'curl -uadmin:AP8FLm7718W6o5MZnPEHVRnaYwx -T \
                target/bio*.jar \
                "http://ec2-44.203.35.3.compute-1.amazonaws.com:8081/artifactory/geoapp1/"'
            }
        }
        stage('image build'){
            steps{
                sh ' aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 185882989056.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'
            }
        }
        stage('push image'){
            steps{
                sh 'docker tag geoapp:latest 185882989056.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                sh 'docker push 185882989056.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            }
        }
    }
}
